{
  "hash": "6b9cc36e1a37dc009b04ad3ed570403a",
  "result": {
    "markdown": "---\nmetadata-files: \n    - _variables.yml\ntitle: \"{{< var course.subtitle >}}\"\nauthor: \"{{< var instructor.name-wo-title >}}\"  \ndate-format: long\nfrom: markdown+emoji\nbibliography: data/dataviz.bib\ncsl: data/dataviz.csl\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 6\n  fig-height: 5\nformat:\n  revealjs:\n    theme: dataviz.scss\n    footer: '{{< var course.title >}} | {{< var course.location >}} | {{< var course.date >}}'\n    header-includes: |\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" rel=\"stylesheet\"/>\n    slide-number: true\n    show-slide-number: all\n    transition: fade\n    progress: true\n    multiplex: false\n    scrollable: false\n    preview-links: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    pause: true\ntitle-slide-attributes:\n    data-background-image: \"img/bgimage2.png\"\n    data-background-position: 0% 95%\n    data-background-size: contain\n---\n\n\n## Über mich {.smaller}\n\n::: columns\n::: {.column width=\"30%\"}\n![](img/profile-pic.jpg){.absolute top=\"20%\" left=\"7%\" style=\"display: inline-block; width: 150px; height: 150px;border-radius:50%;\"}\n:::\n::: {.column width=\"70%\" .iconlist}\n- <i class=\"fa-solid fa-user icon\"></i> {{< var instructor.name-wo-title >}}\n- <i class=\"fa-solid fa-building icon\"></i> {{< var instructor.employer >}}\n- <i class=\"fa-solid fa-envelope icon\"></i> [{{< var instructor.email >}}](mailto:{{< var instructor.email >}})\n- <i class=\"fa-solid fa-globe icon\"></i> [{{< var instructor.url >}}]({{< var instructor.url >}})\n- <i class=\"fa-brands fa-twitter icon\"></i> [{{< var instructor.twitter >}}](https://www.twitter.com/{{< var instructor.twitter >}})\n\n<br> \n\n- <i class=\"fa-solid fa-graduation-cap\"></i> Ich bin kein ausgebildeter Grafiker sondern Autodidakt.\n- <i class=\"fa-solid fa-image\"></i> Eine Auswahl meiner Grafiken ist unter [https://mschnetzer.github.io/portfolio/](https://mschnetzer.github.io/portfolio/)\n:::\n:::\n\n\n\n## Über diesen Workshop {.medium}\n\n::: {.secfont style=\"font-size:2.3rem;text-align:center;\"}\n\"Ein Bild sagt mehr als Tausend Worte\"\n:::\n\nMit der stetig verbesserten Datenverfügbarkeit ist die Nachfrage nach Datenvisualisierung enorm gestiegen. Mit gängiger Software ist eine Grafik heute rasch erstellt. Aber es gilt einige Grundregeln für erfolgreiche Datenvisualisierung zu beachten.\n\nWas sind die Ziele des Workshops?\n\n- Kenntnis der wichtigsten [Prinzipien der Datenvisualisierung]{.marker-hl}\n- [Inspiration]{.marker-hl} aus einer Vielzahl unterschiedlicher Grafiktypen\n- Erfahrungen aus [best practice Beispielen]{.marker-hl}\n- Kurze [Einführung in ggplot]{.marker-hl} und Code-Beispiele\n\n## Was sind eure Erwartungen?\n\n![](img/group3.png){.absolute bottom=\"0%\" left=\"0%\" height=\"400px\"}\n![](img/group2.png){.absolute bottom=\"0%\" left=\"15%\" height=\"400px\"}\n![](img/group1.png){.absolute bottom=\"0%\" left=\"33%\" height=\"400px\"}\n![](img/group4.png){.absolute bottom=\"0%\" left=\"50%\" height=\"400px\"}\n\n[Habt ihr spezielle Erwartungen oder Wünsche für diesen Workshop?]{.bubble .bubble-bottom-right .absolute top=\"15%\" right=\"0%\" style=\"max-width:400px;--bubcol: var(--bubcol-dred); font-size:1.8rem;\"}\n\n\n# Die frühen Stars der Datenvisualisierung\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_cool.png)\n:::\n\n::: footer\n:::\n\n## William Playfair (1759-1823) {.smaller}\n\n![](img/playfair.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[erstellt: 1786]\n:::\n\n## John Snow (1813-1858) {.smaller}\n\n::: {.columns}\n::: {.column width=60%}\n![](img/cholera_large.jpg){height=\"450\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column width=35%}\n![](img/cholera_detail.png){height=\"450\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[erstellt: 1854]\n:::\n\n## Charles Joseph Minard (1781-1870) {.smaller}\n\n![](img/minard.png){fig-align=\"center\"}\n\n::: {.aside}\n[erstellt: 1869]\n:::\n\n## W.E.B. Du Bois (1868-1963) {.smaller}\n\n::: {.columns}\n::: {.column}\n![](img/dubois1.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column}\n![](img/dubois2.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[erstellt: 1890]\n:::\n\n## Otto Neurath (1882-1945) {.smaller}\n\n![](img/neurath.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[erstellt: 1943]\n:::\n\n\n# Die Gestalt-Prinzipien\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_finger.png)\n:::\n\n::: footer\n:::\n\n## Welche Grafik ist zufällig und welche besitzt Struktur? {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/random1.png)\n:::\n::: {.column}\n![](img/random2.png)\n:::\n:::\n\n## Was sind die Gestalt-Prinzipien? {.smaller}\n\nDie Gestalt-Prinzipien bieten einen psychologischen Ansatz dafür, wie das menschliche Gehirn visuelle Informationen wahrnimmt und ordnet, indem ähnliche Elemente gruppiert, Muster erkannt und komplexe Bilder vereinfacht werden.\n\n![](img/gestalt_header2.png){height=\"250\" fig-align=\"center\"}\n\nGestaltpsychologie entwickelte sich in den 1920er Jahren zu einer eigenständigen Theorie und untersucht die kognitiven Mechanismen, Phänomäne wahrzunehmen und einzuordnen.\n\n## Ausgewählte Prinzipien {.smaller}\n\n- [Nähe]{.hl .hl-dred .secfont} Räumliche Nähe kann Elemente als Teil einer Einheit wirken lassen.\n- [Ähnlichkeit]{.hl .hl-blue .secfont} Ähnliche Element werden als zusammengehörig wahrgenommen.\n- [Verbundenheit]{.hl .hl-dred .secfont} Miteinander verbundene Elemente werden als eine Einheit wahrgenommen.\n- [Kontinuität]{.hl .hl-blue .secfont} Das Gehirn erkennt sinnvolle Fortsetzungen.\n- [Geschlossenheit]{.hl .hl-dred .secfont} Das Auge nimmt eine vollendete Form wahr, selbst wenn Teile der Form fehlen oder unvollständig sind.\n- [Gemeinsames Schicksal]{.hl .hl-blue .secfont} Objekte werden als Teil einer Gruppe wahrgenommen, wenn sie auf derselben Bahn platziert sind.\n\n::: {.aside}\nQuelle: @healy:2018\n:::\n\n## Gestaltpsychologie in der Datenvisualisierung {.medium}\n\n![](img/gestalt.png){fig-align=\"center\" height=500}\n\n::: {.aside}\nQuelle: @healy:2018\n:::\n\n\n# Fünf Prinzipien für bessere Visualisierungen\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_laptop.png)\n:::\n\n::: footer\n:::\n\n## 1. Wähle eine adequate Darstellungsform {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Nein:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-1-1.png){width=211.2}\n:::\n\n</div>\n<br><br><br><br><br><br><br>\n[OK:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-2-1.png){width=211.2}\n:::\n\n</div>\n:::\n::: {.column width=70%}\n- Wähle den Grafik-Typ anhand der abzubildenden Daten: Welches Skalenniveau haben die Daten?\n- Was soll abgebildet werden: Vergleich, Verteilung, Zusammensetzung, Beziehung?\n- Um den passenden Grafik-Typ aus einer Vielzahl unterschiedlicher Arten zu finden, helfen Hompages wie [https://www.data-to-viz.com](https://www.data-to-viz.com) oder [https://datavizproject.com](https://datavizproject.com)\n:::\n:::\n\n## Ein einfacher Entscheidungsbaum von Darstellungsformen {.medium}\n\n![](img/charttypes.webp){fig-align=\"center\" height=\"530\"}\n\n## Welche Grafik beschreibt die Aussage am klarsten? {.medium}\n\n::: {.columns}\n::: {.column}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/abs-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/rates-1.png){width=576}\n:::\n:::\n\n\n:::\n::: {.column}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/base-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/bars-1.png){width=576}\n:::\n:::\n\n:::\n:::\n\n## 2. Visualisiere die Daten sorgfältig und gewissenhaft {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Nein:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[OK:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Lege Priorität auf Genauigkeit, Klarheit und Integrität\n- Vermeide irreführende Praktiken wie Abschneiden von Achsen, Verwenden sekundärer Achsen, unlautere Auswahl von Daten, mangelnde Kontextualisierung, etc.\n- Eine gute Datenvisualisierung verzichtet auf irreführende Manipulation der Daten oder von einzelnen Grafikelementen!\n:::\n:::\n\n::: {.aside}\nQuelle: @dougherty:2021\n:::\n\n## Beispiel {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/accuracy1.jpeg){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/accuracy2.jpg){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nQuelle: [Patient](https://patient.info/news-and-features/whats-the-average-height-for-men)\n:::\n\n## Noch ein Beispiel {.medium}\n\n::: {.columns}\n::: {.column width=50%}\n![](img/trumptweet.png){height=\"450\"}\n:::\n::: {.column width=50% .fragment}\n<br>\n![](img/voting-election.gif){style=\"border: 1px solid;\"}\n:::\n:::\n\n## Und noch ein drittes Beispiel {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/migration1.png){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/migration2.png){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nQuelle: [The Correspondent](https://thecorrespondent.com/664/how-maps-in-the-media-make-us-more-negative-about-migrants/738023272448-bac255ba)\n:::\n\n## 3. Integriere Text sinnvoll in die Grafik {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Nein:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3a.png){height=250 style=\"vertical-align:top;\"}\n<br>\n[OK:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3b.png){style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Vermeide, dass Leser:innen ihren Kopf drehen müssen um die Bezeichnungen zu lesen\n- Überlege eine logische Reihung der Grafik (alphabetisch, nach Werten, etc.)\n- Direkte Bezeichnung ist besser als eine Legende\n- Wähle sinnvolle Titel, die auf die Botschaft fokussieren\n:::\n:::\n\n::: {.aside}\nQuelle: @dougherty:2021\n:::\n\n## Musterbeispiel {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/annotation1.jpeg)\n:::\n::: {.column .fragment}\n![](img/annotation2.jpeg)\n:::\n:::\n\n::: {.aside}\nQuelle: [Washington Post](https://www.washingtonpost.com/business/2019/06/06/why-crowded-meetings-conference-rooms-make-you-so-so-tired/), [chezVoila](https://twitter.com/chezVoila/status/1136631524919513088?s=20)\n:::\n\n\n## 4. Reduziere Ablenkungen {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Nein:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[OK:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Unnötige visuelle Elemente lenken die Aufmerksamkeit weg von den wichtigen Daten\n- Vermeide grafische Elemente, die keine Information transportieren\n- Bestandteile wie etwa Achsen-Teilstriche oder Gitternetzlinien sollten entfernt oder zumindest reduziert werden\n- Überlege sorgsam, welche visuellen Elemente wirklich nötig für das Lesen der Grafik sind\n:::\n:::\n\n::: {.aside}\nQuelle: @dougherty:2021\n:::\n\n## Musterbeispiel {.medium}\n\n\n::: {.columns}\n::: {.column}\n![](img/clutter1.png)\n:::\n::: {.column .fragment}\n![](img/clutter2.png){height=\"400\"}\n:::\n:::\n\n::: {.fragment .absolute top=\"15%\" left=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/clutter-1.png){width=576}\n:::\n:::\n\n:::\n\n::: {.aside}\nQuellen: [BlueGranite](https://www.bluegranite.com/blog/data-visualization-remove-chart-clutter-and-focus-on-the-insights)\n:::\n\n\n## 5. Vermeide die Spaghetti-Grafik und starte in Grautönen {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Nein:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-3-1.png){width=220.8}\n:::\n\n</div>\n<br><br><br><br><br><br><br>\n[OK:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=211.2}\n:::\n\n</div>\n:::\n::: {.column width=70%}\n- Wenn die Grafik zu viel Information transportiert, sieht sie aus wie Spaghetti\n- Versuche überladene Grafiken in kleinere Bestandteile aufzuteilen (Facets, small multiples) oder hebe die relevante Information hervor\n- Beginne mit Grautönen: das erfordert den strategischen Einsatz von Farben, Labels, etc.\n:::\n:::\n\n\n## Musterbeispiel {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/spaghetti1.png)\n:::\n::: {.column .fragment}\n![](img/spaghetti2.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @schwabish:2014\n:::\n\n\n# Sind irreführende Grafiken wirklich wirkungsvoll?\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_shrug.png)\n:::\n\n::: footer\n:::\n\n## Irreführende Balkengrafik {.medium}\n\n![](img/deceptive_bar.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Irreführende Liniengrafike {.medium}\n\n![](img/deceptive_line.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Irreführende Tortengrafiken {.medium}\n\n![](img/deceptive_pie.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Irreführende Kreisgrafiken {.medium}\n\n![](img/deceptive_bubble.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Irreführende Titel {.medium}\n\n![](img/deceptive_title.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Irreführende Grafiken erfüllen ihren Zweck {.medium}\n\n![](img/deceptive_results.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n# 15 schnelle Tipps\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_point.png)\n:::\n\n::: footer\n:::\n\n## Labels einfach lesbar machen {.medium}\n\n![](img/tipp_horizontal_label.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Text sinnvoll in der Grafik einsetzen {.medium}\n\n![](img/tipp_better_annotation.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Einheitliche Textgröße verwenden {.medium}\n\n![](img/tipp_same_font_size.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Zahlen sinnvoll formatieren und runden {.medium}\n\n![](img/tipp_number_format.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Skala nahe an den Daten {.medium}\n\n![](img/tipp_label_near_data.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Hauptbotschaft im Titel, technische Details in die Notiz {.medium}\n\n![](img/tipp_catchy_title.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Farben nur wenn notwendig {.medium}\n\n![](img/tipp_no_color.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/10-ways-to-use-fewer-colors-in-your-data-visualizations/)\n:::\n\n## Wenn möglich, direkte Labels statt Legende {.medium}\n\n![](img/tipp_no_legend.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/text-in-data-visualizations/)\n:::\n\n## Achte auf das Skalenniveau der Legende {.medium}\n\n![](img/tipp_legend_scale.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/classed-vs-unclassed-color-scales/)\n:::\n\n## Passe die Farbpalette an die Daten an {.medium}\n\n![](img/tipp_color_scale.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/which-color-scale-to-use-in-data-vis/)\n:::\n\n## Einheitliches Farbkonzept durchziehen {.medium}\n\n![](img/tipp_color_concept.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/colors/)\n:::\n\n## Zu komplexe Legende vermeiden {.medium}\n\n![](img/tipp_no_spaghetti_bar.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/10-ways-to-use-fewer-colors-in-your-data-visualizations/)\n:::\n\n## Ändere notfalls den Grafiktyp {.medium}\n\n![](img/tipp_chart_type.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/10-ways-to-use-fewer-colors-in-your-data-visualizations/)\n:::\n\n## \"Small multiples\" statt Spaghetti {.medium}\n\n![](img/tipp_small_multiples.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/10-ways-to-use-fewer-colors-in-your-data-visualizations/)\n:::\n\n## Kleine Kategorien zusammenführen {.medium}\n\n![](img/tipp_summarise_categories.png)\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/10-ways-to-use-fewer-colors-in-your-data-visualizations/)\n:::\n\n# Best practice\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_read.png)\n:::\n\n::: footer\n:::\n\n## Text und Schriftarten {.medium}\n\n::: {.columns style=\"text-align:center;\"}\n::: {.column}\n![Economist](img/economist.png){width=\"450\" style=\"border:0.5px solid;\"}\n<br>\n![New York Times](img/nyt.png){width=\"450\" style=\"border:0.5px solid;\"}\n<br>\n![Politico](img/politico.png){width=\"450\" style=\"border:0.5px solid;\"}\n:::\n::: {.column}\n![Guardian](img/guardian.png){width=\"450\" style=\"border:0.5px solid;\"}\n<br>\n![Spiegel](img/spiegel.png){width=\"450\" style=\"border:0.5px solid;\"}\n<br>\n![Fivethirtyeight](img/538.png){width=\"450\" style=\"border:0.5px solid;\"}\n:::\n:::\n\n::: {.aside}\nQuelle: [Datawrapper](https://blog.datawrapper.de/fonts-for-data-visualization/)\n:::\n\n## Grafikbeschriftung {.medium}\n\n![](img/labels_nyt.png)\n\n::: {.aside}\nQuelle: [New York Times](https://www.nytimes.com/interactive/2018/03/30/upshot/crime-immigration-myth.html)\n:::\n\n## Unzählige Möglichkeiten für Grafikbeschriftung\n\n![](img/best_prac_labels.png){height=\"500\" fig-align=\"center\"}\n\n## Farbgebung {.medium}\n\n![](img/color_nyt.png)\n\n::: {.aside}\nQuelle: [New York Times](https://www.nytimes.com/interactive/2022/02/01/science/covid-deaths-united-states.html)\n:::\n\n## Grau ist (fast) die wichtigste Farbe\n\n![](img/best_prac_colors.png){height=\"500\" fig-align=\"center\"}\n\n## Small multiples {.medium}\n\n![](img/best_prac_multiples.jpeg){height=\"500\" fig-align=\"center\"}\n\n# Quellen für Inspiration\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_break.png)\n:::\n\n::: footer\n:::\n\n## Wo gibt es Ideen für Visualisierungen? {.medium}\n\n- Manche internationale Zeitungen haben Grafik-Portale, z.B. [Economist](https://www.economist.com/graphic-detail), [Wall Street Journal](https://graphics.wsj.com), [Guardian](https://www.theguardian.com/interactive), etc. \n- Die [#tidytuesday](https://twitter.com/search?q=%23tidytuesday) Gemeinschaft ist eine wöchentliche Grafik-Challenge auf Twitter. Es gibt auch andere Events wie die [#30DayChartChallenge](https://twitter.com/30DayChartChall) im April 2023.\n- Folgt der R-Community auf Twitter für Inspiration, z.B. [Cédric Scherer](https://twitter.com/CedScherer), [Georios Karamanis](https://twitter.com/geokaramanis), [Tanya Shapiro](https://twitter.com/tanya_shapiro), u.v.m.\n- Der [\"Information is beautiful\" Award](https://www.informationisbeautifulawards.com/showcase?action=index&award=2022&controller=showcase&page=1&pcategory=short-list&type=awards) ist der bekannteste Preis für Informationsgrafiken.\n- Homepages und Blogs wie etwa [Datawrapper River](https://app.datawrapper.de/river), [Flowing Data](https://flowingdata.com) oder [FiveThirtyEight](https://fivethirtyeight.com).\n\n##  Es gibt Alternativen zu Balken- und Kreisdiagrammen! {.medium}\n\n![](img/alt_stream.png){fig-align=\"center\"}\n\n## Waffle chart\n\n![](img/alt_waffle.png){fig-align=\"center\"}\n\n## Karte als Alternative zur Tortengrafik\n\n![](img/alt_map.png){fig-align=\"center\"}\n\n## Area chart {.medium}\n\n![](img/bsp_careage.png){fig-align=\"center\"}\n\n## Small multiples\n\n![](img/bsp_hitzetagewien.png){fig-align=\"center\"}\n\n## Bump plot\n\n![](img/bsp_inflationbump.png){fig-align=\"center\"}\n\n## Hexagon map\n\n![](img/bsp_gpghexflat.png){fig-align=\"center\"}\n\n## Kräftige Bilder wählen\n\n![](img/bsp_galaxy_of_wealth.png){fig-align=\"center\"}\n\n## Radial bar chart (nicht optimal!)\n\n![](img/bsp_opernball.png){fig-align=\"center\"}\n\n## Karten sind eindrücklich\n\n![](img/bsp_wienplot.png){fig-align=\"center\"}\n\n## Mix aus Grafik und Tabelle\n\n![](img/bsp_wages.png){fig-align=\"center\"}\n\n\n# Let's start with {ggplot}\n\n::: {.absolute top=\"90%\" left=\"30%\" width=\"400px\" height=\"336px\"}\n![](img/avatar_hoodie.png)\n:::\n\n::: footer\n:::\n\n## The grammar of {ggplot} {.smaller}\n\n::: {.tbl-classic .tbl-larger}\n| Component | Function | Explanation |\n|-----------|----------|-------------|\n| Data | ggplot(data) | The raw data that you want to visualise. |\n| Aesthetics | aes() | Aesthetic mappings between variables and visual properties. |\n| Geometries | geom_*() | The geometric shapes representing the data. |\n| Statistics | stat_*() | The statistical transformations applied to the data. |\n| Scales | scale_*() | Maps between the data and the aesthetic dimensions. |\n| Coordinate System\t| coord_*() | Maps data into the plane of the data rectangle. |\n| Facets | facet_*() | The arrangement of the data into a grid of plots. |\n| Visual Themes | theme() | The overall visual defaults of a plot. |\n: {tbl-colwidths=\"[25,20,55]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## Selected geometries in {ggplot} {.smaller}\n\n::: {.tbl-classic .tbl-smaller}\n|  | Geometry | Explanation |\n|--|----------|-------------|\n| ![](img/geom_ribbon.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | area, ribbon | An area plot is the continuous analogue of a stacked bar chart. |\n| ![](img/geom_bar.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | bar, col | Bar charts may be proportional (bar) or with absolute values (col). |\n| ![](img/geom_boxplot.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | boxplot | The boxplot compactly displays the distribution of a continuous variable.|\n| ![](img/geom_density.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | density, histogram | Kernel density plot, which is a smoothed version of the histogram. |\n| ![](img/geom_abline.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | hline, vline, abline | Draws a horizontal or vertical line with an intercept or a line with a slope. |\n| ![](img/geom_line.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | line, path | Line between observations in order of variable (line) or appearance (path) |\n| ![](img/geom_errorbar.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | linerange, errorbar | Various ways of representing a vertical interval defined by x, ymin and ymax. |\n| ![](img/geom_point.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | point, jitter | The point geom is used to create scatterplots and jitter avoids overplotting. |\n| ![](img/geom_curve.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | segment, curve | Draws a straight or curved line between points (x,y) and (xend, yend). |\n| ![](img/geom_smooth.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | smooth | Smoothed line with standard error bounds across a scatterplot. |\n| ![](img/geom_violin.png){height=\"35\" style=\"vertical-align:middle;padding:0;margin:0;\"} | violin | A violin plot is a compact display of a continuous distribution. |\n\n: {tbl-colwidths=\"[5,22,73]\"}\n:::\n\n\n## Additional geometries {.smaller}\n\n::: {.columns .center style=\"font-size:1.3rem;\"}\n::: {.column width=\"33%\"}\n[ggstream::geom_stream()]{.secfont}\n![](img/geom_stream.png){height=\"200\"}\n:::\n::: {.column width=\"33%\" .fragment}\n[waffle::geom_waffle()]{.secfont}\n![](img/geom_waffle.png){height=\"200\"}\n:::\n::: {.column width=\"33%\" .fragment}\n[ggchicklet::geom_chicklet()]{.secfont}\n![](img/geom_chicklet.png){height=\"200\"}\n:::\n:::\n\n::: {.columns .center style=\"font-size:1.3rem;\"}\n::: {.column width=\"33%\" .fragment}\n[ggridges::geom_density_ridges()]{.secfont}\n![](img/geom_ridges.png){height=\"200\"}\n:::\n::: {.column width=\"33%\" .fragment}\n[ggsankey::geom_sankey()]{.secfont}\n![](img/geom_sankey.png){height=\"200\"}\n:::\n::: {.column width=\"33%\" .fragment}\n[ggbump::geom_bump()]{.secfont}\n![](img/geom_bump.png){height=\"200\"}\n:::\n:::\n\n## Geometries and aesthetic mapping {.medium}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|2|3|4\"}\ndata + \n  ggplot(aes(x = year, y = value, color = category)) +\n  geom_point(alpha = 0.5, shape = 21) +\n  scale_color_manual(values = c(\"red\", \"blue\", \"yellow\"))\n```\n:::\n\n\n<br>\n\n::: {.tbl-classic .tbl-smaller}\n| Geometries | Aesthetics | Scales | Dimensions |\n|------------|------------|--------|------------|\n| points | positions (x, y) | scale_x_\\*(), scale_y_\\*() | position (continuous, discrete, reverse, log10, sqrt, date) |\n| lines | colors (color, fill) | scale_color_\\*(), <br> scale_fill_\\*() | colors (continuous, discrete, manual, gradient, gradient2, brewer) |\n| polygons | shapes (shape, linetype) | scale_shape_\\*(), scale_linetype_\\*() | shapes (continuous, discrete, manual, ordinal) |\n| text | size (size) | scale_size_\\*(), scale_radius_\\*() | sizes (continuous, discrete, manual, ordinal, area, date) |\n| boxplot | transparency (alpha) | scale_alpha_\\*() | transparency (continuous, discrete, manual, ordinal, date) |\n| ...many more! | groupings (group) | | |\n: {tbl-colwidths=\"[15,20,25,40]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## First steps {.smaller}\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm)) +\n  geom_point(size = 1.5, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/facet-setup-1.png){width=576}\n:::\n:::\n\n\n## Colors {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,5\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/colors-1.png){width=576}\n:::\n:::\n\n\n## Scales {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/scales-1.png){width=576}\n:::\n:::\n\n\n## Labels {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/labels-1.png){width=576}\n:::\n:::\n\n\n## Annotation rather than legend {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10,15\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/annotation-1.png){width=576}\n:::\n:::\n\n\n## Themes {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"16,17,18,19\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/addthemes-1.png){width=576}\n:::\n:::\n\n\n\n## Weiterführende Literatur \n\n::: {.tbl-larger .recommended-lit}\n|   |   |\n|---|---|\n| ![](img/schwabish.jpg) | **Jonathan Schwabish** <br> *Better Data Visualizations: A Guide for Scholars, Researchers, and Wonks* <br> Columbia University Press <br> ISBN-13: 9780231193115 |\n| ![](img/spiegelhalter.jpeg) | **David Spiegelhalter** <br> *The Art of Statistics: Learning from Data* <br> Penguin Books UK <br> ISBN-13: 9780241258767 |\n: {tbl-colwidths=\"[20,80]\"}\n:::\n\n## Online Bücher\n\n::: {.recommended-lit }\n|   |   |\n|--------|--------|\n| ![](img/healy.jpg){style=\"border: 0.5px solid black\" height=150} | **Kieran Healy** <br> *Data Visualization: A Practical Introduction* <br> Princeton University Press <br> ISBN-13: 9780691181622 <br> [Link](https://socviz.co/index.html#preface) |\n| ![](img/wilke.png){style=\"border: 0.5px solid black\" height=150} | **Claus O. Wilke** <br> *Fundamentals of Data Visualization: A Primer on Making Informative and Compelling Figures* <br> O'Reilly Media <br> ISBN-13: 9781492031086 <br> [Link](https://clauswilke.com/dataviz/) |\n| ![](img/dougherty.jpg){style=\"border: 0.5px solid black\" height=150} | **Jack Dougherty and Ilya Ilyankou** <br> *Hands-On Data Visualization: Interactive Storytelling from Spreadsheets to Code* <br> O'Reilly Media <br> ISBN-13: 9781492086000 <br> [Link](https://handsondataviz.org) |\n: {tbl-colwidths=\"[15,85]\"}\n:::\n\n## Verwendete Literatur {.bibstyle}\n\n:::footer\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}